//
// Drast Programming Language Tests
//

import io

end:

extern int :: printf(string format, ...)

struct Person {
    int age
    @(int age) {
        self.age = age
    }
}

enum Color {
    Red = 50,
    Green,
    Blue
}

asm (
"loop:"
        "cli"
        "htl"
        "jmp loop"
    
    "mov rax, 0"
)


extern int[]*? :: hello(int test, ...) {
    for (int i = 0, i < 10, i += 1) {
        i += 30
    }

    print(.test)
    Person john = .init(50, 40)
    john.name.at(40) = "John"

    int[]*? result = test
    int test = myFunction()
    int test = 50 + 30 + 40 + (30 * 40)
    int test = 40 + myFunction(50 + 230, 40 + 20, "flaskdfm") + 50

    bool test = true

    if (test) {
        bool test = 59
    } else if (test) {
        bool test = 59
    } else {
        bool test = 59
    }
    goto end

    myFunction()

    int i = 500
    while (i > 40) {
        print("Hello World")

        i -= 1
        break
    }

    char op = '+'
    int first = 30
    int second = 40
    int value

    switch (op) {
        case '+':
            value = first + second
        case '-':
                value = first - second
        case '*':
                value = first * second
        case '/':
                value = first - second
    }

end:
    return 50 + 30 + 40
}
